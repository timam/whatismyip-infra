apiVersion: apps/v1
kind: Deployment
metadata:
  name: aws-load-balancer-controller
  namespace: kube-system
  labels:
    app.kubernetes.io/instance: aws-load-balancer-controller
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: aws-load-balancer-controller
    app.kubernetes.io/version: v2.1.1
    helm.sh/chart:  aws-load-balancer-controller-1.1.2
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: aws-load-balancer-controller
      app.kubernetes.io/name: aws-load-balancer-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: aws-load-balancer-controller
        app.kubernetes.io/name: aws-load-balancer-controller
      annotations:
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
    spec:
      serviceAccountName: alb-ingress-controller
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: aws-load-balancer-tls
      containers:
        - name: {{ .Chart.Name }}
          args:
            - --cluster-name={{ .Values.cluster_name }}
            #            - --ingress-class={{ .Values.ingress_class }}
            - --aws-region={{ .Values.region }}
            - --aws-vpc-id={{ .Values.vpc_id }}
          command:
            - /controller
          image: "602401143452.dkr.ecr.us-west-2.amazonaws.com/amazon/aws-load-balancer-controller:v2.1.3"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
          ports:
            - name: webhook-server
              containerPort: 9443
              protocol: TCP
            - name: metrics-server
              containerPort:  8080
              protocol: TCP

          livenessProbe:
            httpGet:
              port: 61779
              path: /healthz
      terminationGracePeriodSeconds:  60
#      priorityClassName: priority-class-ingress
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: aws-load-balancer-controller-leader
  namespace: kube-system