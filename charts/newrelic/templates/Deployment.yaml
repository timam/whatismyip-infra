# Source: nri-bundle/charts/nri-kube-events/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-kube-events
  namespace: monitoring
  labels:
    app: nri-kube-events
    app.kubernetes.io/name: nri-kube-events
    helm.sh/chart: nri-kube-events-1.0.0
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.1.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-kube-events
  template:
    metadata:
      labels:
        app: nri-kube-events
        app.kubernetes.io/name: nri-kube-events
        helm.sh/chart: nri-kube-events-1.0.0
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/version: "1.1.0"
    spec:
      priorityClassName: "priority-class-monitoring"
      containers:
        - name: kube-events
          image: newrelic/nri-kube-events:1.1.0
          imagePullPolicy: IfNotPresent
          args: ["-config", "/app/config/config.yaml", "-loglevel", "debug"]
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
        - name: infra-agent
          image: newrelic/k8s-events-forwarder:1.11.24
          securityContext:
            privileged: false
            runAsUser: 1000 # nri-kube-events
            runAsNonRoot: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          ports:
            - containerPort: 8001
          env:
            - name: NRIA_LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-nri-kube-events-config
                  key: licenseKey
          volumeMounts:
            - mountPath: /var/db/newrelic-infra/data
              name: tmpfs-data
            - mountPath: /var/db/newrelic-infra/user_data
              name: tmpfs-user-data
            - mountPath: /tmp
              name: tmpfs-tmp
      serviceAccountName: nri-bundle-nri-kube-events
      volumes:
        - name: config-volume
          configMap:
            name: nri-bundle-nri-kube-events-config
        - name: tmpfs-data
          emptyDir: {}
        - name: tmpfs-user-data
          emptyDir: {}
        - name: tmpfs-tmp
          emptyDir: {}


---
# Source: nri-bundle/charts/nri-prometheus/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-prometheus
  namespace: monitoring
  labels:
    app.kubernetes.io/name: nri-prometheus
    helm.sh/chart: nri-prometheus-1.0.1
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.3.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-prometheus
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nri-prometheus
        helm.sh/chart: nri-prometheus-1.0.1
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/version: "1.3.0"
    spec:
      priorityClassName: "priority-class-monitoring"
      serviceAccountName: nri-prometheus
      containers:
        - name: nri-prometheus
          image: newrelic/nri-prometheus:1.3.0
          args:
            - "--configfile=/etc/nri-prometheus/config.yaml"
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: /etc/nri-prometheus/
          env:
            - name: "LICENSE_KEY"
              valueFrom:
                secretKeyRef:
                  name: nri-bundle-nri-prometheus-config
                  key: licenseKey
            - name: "BEARER_TOKEN_FILE"
              value: "/var/run/secrets/kubernetes.io/serviceaccount/token"
            - name: "CA_FILE"
              value: "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt"
      volumes:
        - name: config-volume
          configMap:
            name: nri-bundle-nri-prometheus-config

---
# Source: nri-bundle/charts/kube-state-metrics/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-kube-state-metrics
  namespace: monitoring
  labels:
    app.kubernetes.io/name: kube-state-metrics
    helm.sh/chart: "kube-state-metrics-2.3.0"
    app.kubernetes.io/instance: "nri-bundle"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: kube-state-metrics
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/instance: "nri-bundle"
    spec:
      priorityClassName: "priority-class-monitoring"
      hostNetwork: false
      serviceAccountName: nri-bundle-kube-state-metrics
      securityContext:
        fsGroup: 65534
        runAsUser: 65534
      containers:
        - name: kube-state-metrics
          args:
            - --collectors=certificatesigningrequests
            - --collectors=configmaps
            - --collectors=cronjobs
            - --collectors=daemonsets
            - --collectors=deployments
            - --collectors=endpoints
            - --collectors=horizontalpodautoscalers
            - --collectors=ingresses
            - --collectors=jobs
            - --collectors=limitranges
            - --collectors=namespaces
            - --collectors=nodes
            - --collectors=persistentvolumeclaims
            - --collectors=persistentvolumes
            - --collectors=poddisruptionbudgets
            - --collectors=pods
            - --collectors=replicasets
            - --collectors=replicationcontrollers
            - --collectors=resourcequotas
            - --collectors=secrets
            - --collectors=services
            - --collectors=statefulsets
            - --collectors=storageclasses
          imagePullPolicy: IfNotPresent
          image: "quay.io/coreos/kube-state-metrics:v1.7.2"
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 5
          resources:
            null
---
# Source: nri-bundle/charts/nri-metadata-injection/templates/deployment.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  name: nri-bundle-nri-metadata-injection
  namespace: monitoring
  labels:
    app.kubernetes.io/name: nri-metadata-injection
    helm.sh/chart: nri-metadata-injection-1.0.0
    app.kubernetes.io/instance: nri-bundle
    app.kubernetes.io/version: "1.2.0"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: nri-metadata-injection
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nri-metadata-injection
        helm.sh/chart: nri-metadata-injection-1.0.0
        app.kubernetes.io/instance: nri-bundle
        app.kubernetes.io/version: "1.2.0"
    spec:
      priorityClassName: "priority-class-monitoring"
      serviceAccountName: nri-bundle-nri-metadata-injection
      containers:
        - name: nri-metadata-injection
          image: "newrelic/k8s-metadata-injection:1.2.0"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: clusterName
              value: {{ .Values.env }}-{{ .Values.project }}-eks-cluster
          volumeMounts:
            - name: tls-key-cert-pair
              mountPath: /etc/tls-key-cert-pair
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 1
            periodSeconds: 1
          resources:
            limits:
              memory: 80M
            requests:
              cpu: 100m
              memory: 30M

      volumes:
        - name: tls-key-cert-pair
          secret:
            secretName: nri-bundle-nri-metadata-injection

